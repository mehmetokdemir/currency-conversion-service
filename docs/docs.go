// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2022-11-26 02:01:29.471353 +0300 +03 m=+1.327371964
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/list": {
            "get": {
                "description": "List user's balances with currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List User Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token of logged-in user.",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserAccountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/exchange/rate": {
            "post": {
                "description": "Get exchange rate on given currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exchange"
                ],
                "summary": "Get Exchange Rate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Auth token of logged-in user.",
                        "name": "X-Auth-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ExchangeRateOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ExchangeRateOfferResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "User Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Auth User",
                "parameters": [
                    {
                        "description": "body params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "body params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.RegisterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helper.ResponseError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccountWallet": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "currency_code": {
                    "type": "string"
                }
            }
        },
        "dto.ExchangeRateOfferRequest": {
            "type": "object",
            "required": [
                "from_currency_code",
                "to_currency_code"
            ],
            "properties": {
                "from_currency_code": {
                    "description": "From currency code",
                    "type": "string",
                    "x-order": "1",
                    "example": "TRY"
                },
                "to_currency_code": {
                    "description": "To currency code",
                    "type": "string",
                    "x-order": "2",
                    "example": "EUR"
                }
            }
        },
        "dto.ExchangeRateOfferResponse": {
            "type": "object",
            "properties": {
                "offer_id": {
                    "description": "ID of the exchange rate offer",
                    "type": "integer",
                    "x-order": "1",
                    "example": 4
                },
                "from_currency_code": {
                    "description": "From currency code",
                    "type": "string",
                    "x-order": "2",
                    "example": "TRY"
                },
                "to_currency_code": {
                    "description": "To currency code",
                    "type": "string",
                    "x-order": "3",
                    "example": "EUR"
                },
                "exchange_rate": {
                    "description": "Exchange rate with markup rate",
                    "type": "number",
                    "x-order": "4",
                    "example": 22
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "description": "Username of the user",
                    "type": "string",
                    "x-order": "1",
                    "example": "john"
                },
                "password": {
                    "description": "Password of the user",
                    "type": "string",
                    "x-order": "2",
                    "example": "TopSecret!!!"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "currency_code",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "description": "Username of the creating user",
                    "type": "string",
                    "x-order": "1",
                    "example": "john"
                },
                "email": {
                    "description": "Email of the creating user",
                    "type": "string",
                    "x-order": "2",
                    "example": "john@gmail.com"
                },
                "password": {
                    "description": "Password of the creating user",
                    "type": "string",
                    "x-order": "3",
                    "example": "TopSecret!!!"
                },
                "currency_code": {
                    "description": "Currency code for default wallet which is given currency",
                    "type": "string",
                    "x-order": "4",
                    "example": "TRY"
                }
            }
        },
        "dto.RegisterResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "1",
                    "example": "john"
                },
                "email": {
                    "type": "string",
                    "x-order": "2",
                    "example": "john@gmail.com"
                }
            }
        },
        "dto.UserAccountResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the user",
                    "type": "integer"
                },
                "username": {
                    "description": "Username of the user",
                    "type": "string"
                },
                "wallets": {
                    "description": "Wallets of the user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AccountWallet"
                    }
                }
            }
        },
        "helper.Response": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "x-order": "1",
                    "example": true
                },
                "status_code": {
                    "type": "integer",
                    "x-order": "2",
                    "example": 200
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/helper.ResponseWarning"
                    },
                    "x-order": "3"
                },
                "error": {
                    "x-order": "4",
                    "$ref": "#/definitions/helper.ResponseError"
                },
                "data": {
                    "x-order": "5"
                }
            }
        },
        "helper.ResponseError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "NOT_FOUND"
                },
                "detail": {
                    "type": "string",
                    "x-order": "2",
                    "example": "user not found"
                }
            }
        },
        "helper.ResponseWarning": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "x-order": "1",
                    "example": "password"
                },
                "code": {
                    "type": "string",
                    "x-order": "2",
                    "example": "invalid"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Currency Conversion Service",
	Description:      "Currency Conversion Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
