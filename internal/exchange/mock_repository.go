// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mehmetokdemir/currency-conversion-service/internal/exchange (interfaces: IExchangeRepository)

// Package exchange is a generated GoMock package.
package exchange

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIExchangeRepository is a mock of IExchangeRepository interface.
type MockIExchangeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIExchangeRepositoryMockRecorder
}

// MockIExchangeRepositoryMockRecorder is the mock recorder for MockIExchangeRepository.
type MockIExchangeRepositoryMockRecorder struct {
	mock *MockIExchangeRepository
}

// NewMockIExchangeRepository creates a new mock instance.
func NewMockIExchangeRepository(ctrl *gomock.Controller) *MockIExchangeRepository {
	mock := &MockIExchangeRepository{ctrl: ctrl}
	mock.recorder = &MockIExchangeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIExchangeRepository) EXPECT() *MockIExchangeRepositoryMockRecorder {
	return m.recorder
}

// CreateOffer mocks base method.
func (m *MockIExchangeRepository) CreateOffer(arg0 Offer) (*Offer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOffer", arg0)
	ret0, _ := ret[0].(*Offer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOffer indicates an expected call of CreateOffer.
func (mr *MockIExchangeRepositoryMockRecorder) CreateOffer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOffer", reflect.TypeOf((*MockIExchangeRepository)(nil).CreateOffer), arg0)
}

// GetExchangeRate mocks base method.
func (m *MockIExchangeRepository) GetExchangeRate(arg0, arg1 string) (*Exchange, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeRate", arg0, arg1)
	ret0, _ := ret[0].(*Exchange)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchangeRate indicates an expected call of GetExchangeRate.
func (mr *MockIExchangeRepositoryMockRecorder) GetExchangeRate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeRate", reflect.TypeOf((*MockIExchangeRepository)(nil).GetExchangeRate), arg0, arg1)
}

// GetOffer mocks base method.
func (m *MockIExchangeRepository) GetOffer(arg0 uint) (*Offer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOffer", arg0)
	ret0, _ := ret[0].(*Offer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOffer indicates an expected call of GetOffer.
func (mr *MockIExchangeRepositoryMockRecorder) GetOffer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOffer", reflect.TypeOf((*MockIExchangeRepository)(nil).GetOffer), arg0)
}

// Migration mocks base method.
func (m *MockIExchangeRepository) Migration() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Migration")
	ret0, _ := ret[0].(error)
	return ret0
}

// Migration indicates an expected call of Migration.
func (mr *MockIExchangeRepositoryMockRecorder) Migration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Migration", reflect.TypeOf((*MockIExchangeRepository)(nil).Migration))
}
